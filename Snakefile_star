samples = ['TxF6f6', 'TxF6m23']
### workflow ###

# This rule establishes the names of output files from other rules
rule all:
     input:
          idx = "STARindex/merged_TX_noMatPAR",
          aln = expand("RNAmapped/{sample}Aligned.sortedByCoord.out.bam", sample = samples),
          bamidx = expand("RNAmapped/{sample}Aligned.sortedByCoord.out.bam.bai", sample = samples),
         # txt = expand("bamqc/{sample}_rna/genome_results.txt", sample = samples),
         # html = expand("bamqc/{sample}_rna/qualimapReport.html", sample = samples)

# This rule creates the STAR index
rule star_index:
    input:
        fasta="merged_TX_noMatPAR.fa",
    output:
        directory("STARindex/merged_TX_noMatPAR"),
    threads: 8
    params:
        extra="",
    log:
        "logs/star/star_index_merged_hap1_hap2_NC_no_autosomes.log",
    resources:
        tmpdir="/ohta2/bianca.sacchi/tmp"
    wrapper:
        "v2.6.1/bio/star/index"


# This rule maps rna reads to genome
rule star_pe_multi:
    input:
        fq1="RNAreads/{sample}_R1.rna.fastq.gz",
        fq2="RNAreads/{sample}_R2.rna.fastq.gz",
        idx="STARindex/merged_TX_noMatPAR"
    output:
        aln="RNAmapped/{sample}Aligned.sortedByCoord.out.bam",
        log="RNAmapped/{sample}Log.out",
        sj="RNAmapped/{sample}SJ.out.tab",
        log_final="RNAmapped/{sample}Log.final.out",
    params:
        prefix = "RNAmapped/{sample}",
    threads: 10
    resources:
        tmpdir="/ohta2/bianca.sacchi/tmp"
    shell:
         """
         STAR --runThreadN {threads} \
         --readFilesCommand zcat \
         --genomeDir {input.idx} \
         --readFilesIn {input.fq1} {input.fq2} \
         --outSAMtype BAM SortedByCoordinate \
         --twopassMode Basic \
         --outSAMattrRGline ID:{wildcards.sample} \
         --outFileNamePrefix {params.prefix} \
         --outTmpDir {resources.tmpdir}/{wildcards.sample} \
         """
        
rule index_bam:
    """
    Index sorted BAM with marked duplicates
    """
    input:
        aln={rules.star_pe_multi.output.aln}
    output:
        bamidx = 'RNAmapped/{sample}Aligned.sortedByCoord.out.bam.bai',
    log: 'logs/index_bam/{sample}_index_bam.rna.log'
    threads: 8
    resources:
          tmpdir="/ohta2/bianca.sacchi/tmp"
    shell:
        """
        samtools index -@ {threads} {input} 2> {log}
        """
# This rule runs bamqc and creates depth plots
